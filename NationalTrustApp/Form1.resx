<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>