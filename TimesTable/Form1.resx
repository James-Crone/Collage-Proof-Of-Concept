<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>